@startuml

<style>
activityDiagram {
    BackgroundColor #F0E8F5
    BorderColor #FFC0CB
    FontColor #333
    FontName Comic Sans MS
}

diamond {
    BackgroundColor #FFDEE3
    LineColor #FF69B4
    FontColor #FF1493
    FontName Comic Sans MS
    FontSize 16
}

arrow {
    FontColor #FFD700
    FontName Comic Sans MS
    FontSize 16
}

partition {
    LineColor #FF4500
    FontColor #FF6347
    RoundCorner 20
    BackgroundColor #FFE4E1
}

note {
    FontColor #0000FF
    LineColor #8A2BE2
    BackgroundColor #E6E6FA
}

document {
    BackgroundColor #F5F5DC
}

group {
    FontColor #FF69B4
    LineColor #DDA0DD
    BackgroundColor #FFB6C1
}
</style>
title Index()实现

skinparam ConditionEndStyle diamond

start

group Index()
:storeKeySet, err := c.index.getKeysFromIndex(indexName, obj);
    group getKeysFromIndex() #FFE4E1
        :提取索引函数，比如同namespace提取到 MetaNamespaceIndexFunc
         \t\t\t\t indexFunc := i.indexers[indexName];
    :对象丢进去拿到索引值，比如default
	indexedValues, err := indexFunc(obj);
	:indexName如namespace，这里可以查到Index
    \t\t index := i.indices[indexName];
    :var storeKeySet sets.String;

    if (len(indexedValues) == 1) is (是) then
      :优化：大多数情况对应索引值为1的场景，比如用namespace时值就是唯一的
      \t storeKeySet = index[indexedValues[0]])类似于=index["default"];
    else (否)
      :storeKeySet = sets.String{};
      while (_, indexedValue := range indexedValue)
        while (key := range index[indexedValue])
          :storeKeySet.Insert(key);
        endwhile
      endwhile
    endif
    :return storeKeySet, nil;
    end group
    :list := make([]interface{}, 0, storeKeySet.Len());
    while (storeKey也就是default/pod_1这种字符串，\n 通过其就可以到items map中提取需要的obj \n\t    storeKey := range storeKeySet)
      :list = append(list, c.items[storeKey]);
    endwhile
    :return list, nil;
end group
@enduml